<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.journalista.mappers.memberMapper">

	<!-- 회원 가입 -->
	<insert id="register"
		parameterType="kr.co.journalista.MemberVO">
		insert into airfly.member(`email`, `password`, `name`, `leave`, `auth`, `Reg_date`, `birthday`)
		values(#{email}, #{password}, #{name}, 0, 1, #{Reg_date}, #{birthday})
	</insert>
	
	<!-- 이메일 중복체크 -->
	<select id="emailCheck" parameterType="String" resultType="integer">
		select count(*) from airfly.member where `email` like CONCAT('%',#{email},'%')
	</select>

	<!-- 로그인 -->
	<select id="login" parameterType="kr.co.journalista.MemberVO" resultType="kr.co.journalista.MemberVO">
		select
		*
		from airfly.member
		where `email` = #{email}
		and `password` = #{password}	
	</select>
	
	<!-- 비밀번호 암호화 체크를 위해 암호화된 비밀번호 받아오기 -->
	<select id="passCheck"  resultType="String">
		select	`password`
		from airfly.member
		where `email` = #{email}
	</select>
	<!-- 로그인 유지 -->
	<update id="keepLogin">
		update airfly.member set sessionKey=#{sessionId},
		sessionLimit=#{next} where email=#{email}
	</update>
	<!-- 로그인세션키 -->
	<select id="checkUserWithSessionKey" resultType="kr.co.journalista.MemberVO">
		select * from
		airfly.member where sessionKey=#{sessionId} and sessionLimit > now()

	</select>
	<!-- 회원정보 수정 -->
	<update id="update_mypage" parameterType="kr.co.journalista.MemberVO">
		update airfly.member set name = #{name}, password = #{password} where email = #{email}
	</update>
	<!-- 비밀번호 변경 -->
	<update id="update_pw" parameterType="kr.co.journalista.MemberVO">
	 	update airfly.member set password = #{password} where email = #{email} and name = #{name} and birthday = #{birthday}
	</update>	
		
	
	<!-- 회원이 탈퇴함 leave를 1로 바꾸고 탈퇴날짜가 찍힘 -->
	<update id="mypage_withdrawal" parameterType="kr.co.journalista.MemberVO">
		UPDATE `member` SET `leave`=1, `withdrawal_date` = #{withdrawal_date} where `email` = #{email}
	</update>

	<update id="createAuthKey" parameterType="kr.co.journalista.MemberVO">
		update airfly.member set email_key = #{email_key} where email = #{email}
	</update>
	
	<update id="userAuth">
		update airfly.member set email_key = 'Y' where email = #{email}
	</update>

</mapper>